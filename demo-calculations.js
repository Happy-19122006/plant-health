#!/usr/bin/env node

/**
 * Demo script to showcase AI Agent Perfect Calculations
 * This script demonstrates the calculation features for farmers
 */

console.log('üå± AI Agent Perfect Calculations Demo\n');

// Sample diseases and treatments data
const sampleData = {
    diseases: [
        {
            id: 1,
            name_en: 'Late Blight',
            name_hi: '‡§≤‡•á‡§ü ‡§¨‡•ç‡§≤‡§æ‡§á‡§ü',
            crop: 'Tomato',
            crop_hi: '‡§ü‡§Æ‡§æ‡§ü‡§∞',
            treatments: [
                {
                    name_en: 'Chlorothalonil 75% WP',
                    name_hi: '‡§ï‡•ç‡§≤‡•ã‡§∞‡•ã‡§•‡•à‡§≤‡•ã‡§®‡§ø‡§≤ 75% WP',
                    dosage_per_acre: 500,
                    dosage_per_hectare: 1250,
                    water_requirement_per_acre: 200,
                    water_requirement_per_hectare: 500,
                    spray_volume_per_acre: 200,
                    spray_volume_per_hectare: 500,
                    application_timing: 'Early morning (6-8 AM) or evening (5-7 PM)',
                    weather_conditions: 'No rain for 24 hours, temperature below 30¬∞C',
                    reapplication_interval: 7,
                    total_applications: 3,
                    cost_per_unit: 380,
                    unit: 'g',
                    safety_precautions_en: 'Avoid contact with skin and eyes',
                    safety_precautions_hi: '‡§§‡•ç‡§µ‡§ö‡§æ ‡§î‡§∞ ‡§Ü‡§Ç‡§ñ‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç'
                }
            ]
        },
        {
            id: 2,
            name_en: 'Rice Blast',
            name_hi: '‡§∞‡§æ‡§á‡§∏ ‡§¨‡•ç‡§≤‡§æ‡§∏‡•ç‡§ü',
            crop: 'Rice',
            crop_hi: '‡§ö‡§æ‡§µ‡§≤',
            treatments: [
                {
                    name_en: 'Tricyclazole 75% WP',
                    name_hi: '‡§ü‡•ç‡§∞‡§æ‡§á‡§∏‡§æ‡§á‡§ï‡•ç‡§≤‡§æ‡§ú‡•ã‡§≤ 75% WP',
                    dosage_per_acre: 300,
                    dosage_per_hectare: 750,
                    water_requirement_per_acre: 200,
                    water_requirement_per_hectare: 500,
                    spray_volume_per_acre: 200,
                    spray_volume_per_hectare: 500,
                    application_timing: 'Early morning (6-8 AM) or evening (5-7 PM)',
                    weather_conditions: 'No rain for 24 hours, temperature below 32¬∞C',
                    reapplication_interval: 10,
                    total_applications: 2,
                    cost_per_unit: 450,
                    unit: 'g',
                    safety_precautions_en: 'Avoid contact with skin',
                    safety_precautions_hi: '‡§§‡•ç‡§µ‡§ö‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç'
                }
            ]
        }
    ]
};

// Calculation function
function calculateMedicine(disease, area, unit, language = 'hi') {
    const isHindi = language === 'hi';
    const treatment = disease.treatments[0]; // Get first treatment
    
    const dosage = unit === 'acre' ? treatment.dosage_per_acre : treatment.dosage_per_hectare;
    const water = unit === 'acre' ? treatment.water_requirement_per_acre : treatment.water_requirement_per_hectare;
    const sprayVolume = unit === 'acre' ? treatment.spray_volume_per_acre : treatment.spray_volume_per_hectare;
    
    const totalDosage = (dosage * area).toFixed(2);
    const totalWater = (water * area).toFixed(0);
    const totalSpray = (sprayVolume * area).toFixed(0);
    const totalCost = (treatment.cost_per_unit * totalDosage / 1000).toFixed(2);
    
    return {
        disease: disease,
        area: area,
        unit: unit,
        treatment: treatment,
        calculations: {
            totalDosage: totalDosage,
            totalWater: totalWater,
            totalSpray: totalSpray,
            totalCost: totalCost
        },
        language: language
    };
}

// Display results function
function displayResults(result) {
    const isHindi = result.language === 'hi';
    const disease = result.disease;
    const treatment = result.treatment;
    const calc = result.calculations;
    
    console.log('='.repeat(60));
    console.log(`üå± ${isHindi ? 'AI Agent ‡§ó‡§£‡§®‡§æ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ' : 'AI Agent Calculation Results'}`);
    console.log('='.repeat(60));
    
    console.log(`\nüìä ${isHindi ? '‡§∞‡•ã‡§ó ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä' : 'Disease Information'}:`);
    console.log(`   ${isHindi ? '‡§∞‡•ã‡§ó' : 'Disease'}: ${disease.name_en} (${disease.name_hi})`);
    console.log(`   ${isHindi ? '‡§´‡§∏‡§≤' : 'Crop'}: ${disease.crop} (${disease.crop_hi})`);
    
    console.log(`\nüíä ${isHindi ? '‡§â‡§™‡§ö‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§µ' : 'Treatment Recommendation'}:`);
    console.log(`   ${treatment.name_en} (${treatment.name_hi})`);
    
    console.log(`\nüìè ${isHindi ? '‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡§´‡§≤' : 'Field Area'}:`);
    console.log(`   ${result.area} ${result.unit === 'acre' ? (isHindi ? '‡§è‡§ï‡§°‡§º' : 'acres') : (isHindi ? '‡§π‡•á‡§ï‡•ç‡§ü‡•á‡§Ø‡§∞' : 'hectares')}`);
    
    console.log(`\nüßÆ ${isHindi ? '‡§ó‡§£‡§®‡§æ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ' : 'Calculation Results'}:`);
    console.log(`   ${isHindi ? '‡§¶‡§µ‡§æ ‡§ï‡•Ä ‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ' : 'Medicine Quantity'}: ${calc.totalDosage} ${treatment.unit}`);
    console.log(`   ${isHindi ? '‡§™‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§' : 'Water Required'}: ${calc.totalWater} ${isHindi ? '‡§≤‡•Ä‡§ü‡§∞' : 'liters'}`);
    console.log(`   ${isHindi ? '‡§∏‡•ç‡§™‡•ç‡§∞‡•á ‡§µ‡•â‡§≤‡•ç‡§Ø‡•Ç‡§Æ' : 'Spray Volume'}: ${calc.totalSpray} ${isHindi ? '‡§≤‡•Ä‡§ü‡§∞' : 'liters'}`);
    console.log(`   ${isHindi ? '‡§Ö‡§®‡•Å‡§Æ‡§æ‡§®‡§ø‡§§ ‡§≤‡§æ‡§ó‡§§' : 'Estimated Cost'}: ‚Çπ${calc.totalCost}`);
    
    console.log(`\n‚è∞ ${isHindi ? '‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§µ‡§ø‡§µ‡§∞‡§£' : 'Application Details'}:`);
    console.log(`   ${isHindi ? '‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§∏‡§Æ‡§Ø' : 'Best Time'}: ${treatment.application_timing}`);
    console.log(`   ${isHindi ? '‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø' : 'Weather Conditions'}: ${treatment.weather_conditions}`);
    console.log(`   ${isHindi ? '‡§™‡•Å‡§®: ‡§Ü‡§µ‡•á‡§¶‡§®' : 'Reapplication'}: ${isHindi ? '‡§π‡§∞' : 'Every'} ${treatment.reapplication_interval} ${isHindi ? '‡§¶‡§ø‡§®' : 'days'}`);
    console.log(`   ${isHindi ? '‡§ï‡•Å‡§≤ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó' : 'Total Applications'}: ${treatment.total_applications} ${isHindi ? '‡§¨‡§æ‡§∞' : 'times'}`);
    
    console.log(`\n‚ö†Ô∏è  ${isHindi ? '‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡§ø‡§Ø‡§æ‡§Ç' : 'Safety Precautions'}:`);
    console.log(`   ${isHindi ? treatment.safety_precautions_hi : treatment.safety_precautions_en}`);
    
    console.log('\n' + '='.repeat(60));
}

// Demo scenarios
function runDemo() {
    console.log('üöÄ Starting AI Agent Perfect Calculations Demo...\n');
    
    // Scenario 1: Tomato Late Blight - 2 acres (Hindi)
    console.log('üìù Scenario 1: Tomato Late Blight - 2 acres (Hindi)');
    const result1 = calculateMedicine(sampleData.diseases[0], 2, 'acre', 'hi');
    displayResults(result1);
    
    // Scenario 2: Rice Blast - 1 hectare (English)
    console.log('\nüìù Scenario 2: Rice Blast - 1 hectare (English)');
    const result2 = calculateMedicine(sampleData.diseases[1], 1, 'hectare', 'en');
    displayResults(result2);
    
    // Scenario 3: Tomato Late Blight - 0.5 acres (Hindi)
    console.log('\nüìù Scenario 3: Tomato Late Blight - 0.5 acres (Hindi)');
    const result3 = calculateMedicine(sampleData.diseases[0], 0.5, 'acre', 'hi');
    displayResults(result3);
    
    // Scenario 4: Rice Blast - 2.5 hectares (English)
    console.log('\nüìù Scenario 4: Rice Blast - 2.5 hectares (English)');
    const result4 = calculateMedicine(sampleData.diseases[1], 2.5, 'hectare', 'en');
    displayResults(result4);
    
    console.log('\nüéâ Demo completed successfully!');
    console.log('\nüí° Key Features Demonstrated:');
    console.log('   ‚úÖ Exact dosage calculations per acre/hectare');
    console.log('   ‚úÖ Water requirement calculations');
    console.log('   ‚úÖ Spray volume calculations');
    console.log('   ‚úÖ Cost estimates');
    console.log('   ‚úÖ Application timing and frequency');
    console.log('   ‚úÖ Safety precautions');
    console.log('   ‚úÖ Multilingual support (Hindi/English)');
    console.log('   ‚úÖ Multiple field sizes and units');
    
    console.log('\nüå± This AI Agent provides perfect calculations to help farmers make informed decisions!');
}

// Run demo if called directly
if (require.main === module) {
    runDemo();
}

module.exports = { calculateMedicine, displayResults, sampleData };
